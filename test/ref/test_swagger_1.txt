===================================
version:  20171123
===================================
using raml file              : ../test/in/test_1/binarySwitch.raml
using docx file              : ../input/ResourceTemplate.docx
using docx output file       : ../test/./out/test_swagger_1.docx
using schema dir             : ../test/in/test_1/
using resource               : BinarySwitchResURI
using header0                : None
using annex                  : False
using put for property table : False
using composite              : False
using sensor                 : False
schema switch                : False
schema (WT) switch           : False
derived                      : None
swagger                      : ../test/./out/test_swagger_1.swagger.json
styles:
 heading: Heading 1 or ANNEX-heading1
 table style: TABLE-A
 table header style: TABLEHEADER
 color (code) style: CODE-AQUA
                   : CODE-YELLOW
                   : CODE-GREY
                   : CODE-BLACK
                   : CODE-BLUE
                   : CODE-GREEN
===================================
HTTPPRoxy: serving at port 4321
DisplayName: Binary Switch
Title Binary Switch
RT =  oic.r.switch.binary
resolve schema reference: BinarySwitch oic.r.switch.binary.json
xx=> validation schema (jsonschema)
resolve schema reference: BinarySwitch oic.r.switch.binary.json
xx=xx=> schema & json VALID
xxx=> validation schema (jsonschema) done
resolve schema reference: BinarySwitch oic.r.switch.binary.json
xx=> validation schema (jsonschema)
resolve schema reference: BinarySwitch oic.r.switch.binary.json
xx=xx=> schema & json VALID
xxx=> validation schema (jsonschema) done
resolve schema reference: BinarySwitch oic.r.switch.binary.json
xx=> validation schema (jsonschema)
resolve schema reference: BinarySwitch oic.r.switch.binary.json
xx=xx=> schema & json VALID
xxx=> validation schema (jsonschema) done
resolve schema reference: BinarySwitch oic.r.switch.binary.json
parse_schema: required properties found: ['value']
parse_schema: property: BLAH2
parse_schema: property: BLAH3
parse_schema: property: BLAH1
parse_schema: property: value
parse_schema: property: value2
parse_schema: property: BLAHF1
parse_schema: property: BLAHF3
parse_schema: property: BLAHF2
document saved.. ../test/./out/test_swagger_1.docx
swag_add_resource: resource_description This resource describes a binary switch (on/off).
The value is a boolean.
A value of 'true' means that the switch is on.
A value of 'false' means that the switch is off.

swag_add_resource: object {'parentResource': None, 'is_': ['interface'], 'description': "This resource describes a binary switch (on/off).\nThe value is a boolean.\nA value of 'true' means that the switch is on.\nA value of 'false' means that the switch is off.\n", 'uri': '/BinarySwitchResURI', 'displayName': 'Binary Switch', 'type': None, 'resources': OrderedDict(), 'methods': OrderedDict([('get', {'body': None, 'responses': OrderedDict([(200, {'body': OrderedDict([('application/json', {'notNull': None, 'formParameters': None, 'example': '{\n  "rt":     "oic.r.switch.binary",\n  "id":     "unique_example_id",\n  "value":  false\n}\n', 'schema': 'BinarySwitch'})]), 'is_': None, 'description': None, 'formParameters': None, 'headers': None, 'notNull': None, 'example': None, 'schema': None})]), 'notNull': None, 'description': None, 'queryParameters': None}), ('post', {'body': {'body': None, 'is_': None, 'description': None, 'formParameters': None, 'headers': None, 'notNull': None, 'example': '{\n  "id":    "unique_example_id",\n  "value": true\n}\n', 'schema': 'BinarySwitch'}, 'responses': OrderedDict([(200, {'body': OrderedDict([('application/json', {'notNull': None, 'formParameters': None, 'example': '{\n  "id":    "unique_example_id",\n  "value": true\n}\n', 'schema': 'BinarySwitch'})]), 'is_': None, 'description': None, 'formParameters': None, 'headers': None, 'notNull': None, 'example': None, 'schema': None})]), 'notNull': None, 'description': None, 'queryParameters': None})])}
tag: enum
tag_value: ['oic.if.a']
resolve schema reference: BinarySwitch oic.r.switch.binary.json
swag_add_definitions: name oic.r.switch.binary {u'type': u'object', u'properties': {u'BLAH2': {u'readOnly': True, u'type': u'boolean', u'description': u'BLAH2 description'}, u'BLAH3': {u'readOnly': True, u'type': u'boolean', u'description': u'BLAH3 description'}, u'BLAH1': {u'readOnly': True, u'type': u'boolean', u'description': u'BLAH1 description'}, u'value': {u'type': u'boolean', u'description': u'description value'}, u'value2': {u'type': u'boolean', u'description': u'description value2'}, u'BLAHF1': {u'readOnly': False, u'type': u'string', u'description': u'Status of the switch'}, u'BLAHF3': {u'readOnly': False, u'type': u'integer', u'description': u'Status of the switch'}, u'BLAHF2': {u'readOnly': False, u'type': u'number', u'description': u'Status of the switch'}}}
adding required: [u'value']
swagger document saved.. ../test/./out/test_swagger_1.swagger.json
swag_verify
resource : /BinarySwitchResURI
